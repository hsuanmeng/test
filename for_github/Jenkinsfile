pipeline{
    agent none
    stages {
        stage('Non-Parallel Stage'){
            steps{
                echo 'This stage will be executed first.'
                }
        }
        stage('distribute'){
              parallel{
                    stage('166'){
                        agent{ node {
                                label 'testingEnv'
                                customWorkspace '/data/workspace/'
                                }
                             }
                        steps {
                            echo "Test On 166"
                        }
                    }
                    stage('165'){
                        agent{node {
                                label 'testingEnv1'
                                customWorkspace '/data/workspace/'
                                }}
                    steps {
                        echo "Test On 165"
                        }
                    }
               }
        }

        node{notifyStared()}
        def notifyStared(){
            //send to Slack
            slackSend(color:'#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

            // send to HipChat
            hipchatSend (color: 'YELLOW', notify: true,
                message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

            // send to email
            emailext (
                to: "hsuanmeng@pershing.com.tw",
                subject: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
                    )
        }
    }
}
